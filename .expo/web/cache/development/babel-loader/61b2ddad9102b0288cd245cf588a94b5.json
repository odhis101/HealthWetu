{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport HomeLogo from \"../../components/homeLogo\";\nimport Types from \"../../components/DiffrentTypes\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport cars from \"../../assets/data/cars\";\nimport MapViewDirections from 'react-native-maps-directions';\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchResults = function SearchResults(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      fromText = _useState2[0],\n      setFromText = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destinationText = _useState4[0],\n      setDestinationText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      originPlace = _useState6[0],\n      setOriginPlace = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Desitnation = _useState8[0],\n      setDesitnation = _useState8[1];\n\n  console.log(navigation.getParam());\n  console.log('hello world');\n\n  var pressHandler = function pressHandler() {\n    navigation.navigate('EnRoute');\n  };\n\n  var getImage = function getImage(type) {\n    if (type === 'UberX') {\n      return require(\"../../assets/helicopter.png\");\n    }\n\n    if (type === 'Comfort') {\n      return require(\"../../assets/helicopter.png\");\n    }\n\n    return require(\"../../assets/helicopter.png\");\n  };\n\n  var origin = {\n    latitude: 37.78825,\n    longitude: -122.4324\n  };\n  var destination = {\n    latitude: 38.78825,\n    longitude: -122.4324\n  };\n  return _jsxs(View, {\n    children: [_jsxs(MapView, {\n      style: styles.Image,\n      provider: PROVIDER_GOOGLE,\n      initialRegion: {\n        latitude: 37.78825,\n        longitude: -122.4324,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: [_jsx(Marker, {\n        coordinate: {\n          latitude: 37.78825,\n          longitude: -122.4324\n        },\n        children: _jsx(Image, {\n          source: require(\"../../assets/helicopter.png\"),\n          style: {\n            width: 60,\n            height: 60,\n            resizeMode: 'contain'\n          }\n        })\n      }), _jsx(MapViewDirections, {\n        origin: origin,\n        destination: destination,\n        strokeWidth: 5,\n        strokeColor: \"red\",\n        apikey: 'AIzaSyAeRdORzU5z5rUedWcqGLZxRwE_6w9isRc'\n      }), _jsx(Marker, {\n        coordinate: origin,\n        title: 'origin'\n      }), _jsx(Marker, {\n        coordinate: destination,\n        title: 'destination'\n      })]\n    }), _jsx(Types, {}), _jsx(Pressable, {\n      onPress: pressHandler,\n      style: styles.confirm,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Confirm Requests\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  confirm: {\n    padding: 10,\n    margin: 10,\n    marginRight: 10,\n    backgroundColor: 'red',\n    alignItems: 'center'\n  },\n  text: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  Image: {\n    paddingTop: 40,\n    height: 250,\n    width: 'auto'\n  },\n  container: {\n    backgroundColor: 'white',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  },\n  inputText: {\n    fontSize: 14,\n    color: 'black'\n  },\n  Timebar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: 35,\n    padding: 10,\n    backgroundColor: '#fff',\n    borderRadius: 50,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  },\n  inputBox: {\n    backgroundColor: '#fff',\n    margin: 5,\n    padding: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  }\n});\nexport default SearchResults;","map":{"version":3,"names":["React","useState","HomeLogo","Types","AntDesign","MapView","PROVIDER_GOOGLE","Marker","cars","MapViewDirections","useRoute","SearchResults","navigation","fromText","setFromText","destinationText","setDestinationText","originPlace","setOriginPlace","Desitnation","setDesitnation","console","log","getParam","pressHandler","navigate","getImage","type","require","origin","latitude","longitude","destination","styles","Image","latitudeDelta","longitudeDelta","width","height","resizeMode","confirm","text","StyleSheet","create","padding","margin","marginRight","backgroundColor","alignItems","color","fontWeight","paddingTop","container","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","inputText","fontSize","Timebar","flexDirection","justifyContent","borderRadius","inputBox"],"sources":["C:/Users/josho/Downloads/healthWetu/healthWetu/screens/SearchResults/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View, Image,TextInput,Button,Pressable} from 'react-native';\r\nimport HomeLogo from '../../components/homeLogo';\r\nimport Types from '../../components/DiffrentTypes';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport MapView,{PROVIDER_GOOGLE, Marker} from 'react-native-maps';\r\nimport cars from '../../assets/data/cars';\r\nimport MapViewDirections from 'react-native-maps-directions';\r\nimport { useRoute } from '@react-navigation/native'; \r\nconst SearchResults = ({navigation}) => {\r\n  const [fromText, setFromText] = useState()\r\n  const [destinationText,setDestinationText] = useState();\r\n  const [originPlace,setOriginPlace]= useState()\r\n  const [Desitnation,setDesitnation]= useState()\r\n\r\n  console.log(navigation.getParam())\r\n  console.log('hello world')\r\n  const pressHandler =() =>{\r\n  navigation.navigate('EnRoute');\r\n}\r\nconst getImage=(type) => {\r\n  if (type === 'UberX') {\r\n    return require('../../assets/helicopter.png');\r\n  }\r\n  if (type === 'Comfort') {\r\n    return require('../../assets/helicopter.png');\r\n  }\r\n  return require('../../assets/helicopter.png');\r\n}\r\nconst origin ={\r\n  latitude: 37.78825,\r\n  longitude: -122.4324,\r\n}\r\nconst destination ={\r\n  latitude: 38.78825,\r\n  longitude: -122.4324,\r\n}\r\n    return(\r\n        <View>\r\n            \r\n               <MapView style={styles.Image}\r\n                provider={PROVIDER_GOOGLE}\r\n               initialRegion={{\r\n                latitude: 37.78825,\r\n                longitude: -122.4324,\r\n                latitudeDelta: 0.0922,\r\n                longitudeDelta: 0.0421,\r\n              }} \r\n              >\r\n              <Marker \r\n              coordinate={{latitude:37.78825,longitude: -122.4324}}\r\n            >\r\n              <Image source={require('../../assets/helicopter.png')} style={{width:60,height:60,resizeMode:'contain'}}/>\r\n              </Marker>\r\n\r\n              <MapViewDirections\r\n              origin={origin}\r\n              destination={destination}\r\n              strokeWidth={ 5 }\r\n              strokeColor= 'red'\r\n              apikey={'AIzaSyAeRdORzU5z5rUedWcqGLZxRwE_6w9isRc'}\r\n              />\r\n              <Marker \r\n         \r\n              coordinate={origin}\r\n              title={'origin'}\r\n\r\n              />\r\n              <Marker \r\n              coordinate={destination}\r\n              title={'destination'}\r\n              />\r\n              </MapView>\r\n            \r\n          <Types />  \r\n          <Pressable onPress={pressHandler} style={styles.confirm}> \r\n              <Text style={styles.text}>\r\n                Confirm Requests\r\n              </Text>\r\n             \r\n            </Pressable>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    confirm:{\r\n        padding: 10,\r\n        margin:10,\r\n        marginRight:10,\r\n        backgroundColor:'red',\r\n        alignItems:'center',\r\n        \r\n      },\r\n      text:{\r\n        color:'white',\r\n        fontWeight:'bold',\r\n      },\r\n       \r\n   \r\n    Image:{   \r\n        paddingTop:40,\r\n        height:250,\r\n        width:'auto',\r\n    },\r\n    container:{\r\n   \r\n      backgroundColor:'white',\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n          width: 0,\r\n          height: 2,\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4.84,\r\n\r\n      elevation: 5,\r\n  },\r\n\r\n  inputText:{\r\n      fontSize:14,\r\n      color:'black',\r\n      \r\n  },\r\n  Timebar:{\r\n      flexDirection:'row',\r\n      justifyContent:'space-between',\r\n      width:35,\r\n      padding:10,\r\n      backgroundColor:'#fff',\r\n      borderRadius:50,\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n          width: 0,\r\n          height: 2,\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4.84,\r\n\r\n      elevation: 5,\r\n\r\n  },\r\n  inputBox:{\r\n      backgroundColor:'#fff',\r\n      margin:5,\r\n      padding:5,\r\n      flexDirection:'row',\r\n      justifyContent: 'space-between',\r\n      alignItems:'center',\r\n      borderRadius:10,\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n          width: 0,\r\n          height: 2,\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4.84,\r\n\r\n      elevation: 5,\r\n  },\r\n\r\n  });\r\nexport default SearchResults;"],"mappings":"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"},"metadata":{},"sourceType":"module"}