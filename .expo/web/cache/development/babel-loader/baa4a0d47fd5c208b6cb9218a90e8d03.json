{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport RegisterInput from \"./screens/RegisterInput\";\nimport Stack from \"./routes/Stack\";\nimport ServerStack from \"./routes/ServerStack\";\nimport { useEffect } from 'react';\nimport * as Location from 'expo-location';\nimport Root from \"./navigation/Root\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar App = function App() {\n  var androidPermission = function _callee() {\n    var granted;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n              title: 'Location Access Required',\n              message: 'This App needs to Access your location',\n              buttonPositive: 'ok'\n            }));\n\n          case 3:\n            granted = _context.sent;\n\n            if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n              alert('Location Permission Granted.');\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", callback && callback(_context.t0));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    if (Platform.OS === 'android') {\n      androidPermission();\n    } else {\n      Geolocation.requestAuthorization();\n    }\n  }, []);\n  return _jsx(Root, {});\n};\n\nexport default App;","map":{"version":3,"names":["StatusBar","Icon","NavigationContainer","createNativeStackNavigator","RegisterInput","Stack","ServerStack","useEffect","Location","Root","App","androidPermission","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","title","message","buttonPositive","granted","RESULTS","GRANTED","alert","callback","Platform","OS","Geolocation","requestAuthorization"],"sources":["C:/Users/josho/Downloads/healthWetu/healthWetu/App.js"],"sourcesContent":["\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View,ScrollView,SafeAreaView,PermissionsAndroid,Platform} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome'\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport RegisterInput from './screens/RegisterInput';\nimport Stack from './routes/Stack';\nimport ServerStack from './routes/ServerStack';\nimport { useEffect } from 'react';\nimport * as Location from 'expo-location';\nimport Root from './navigation/Root';\n\n\n//navigator.geolocation = require('@react-native-community/geolocation');\nconst App = () => {\n  const androidPermission = async () => {\n    try {\n      const granted = await PermissionsAndroid.request(\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n        {\n          title: 'Location Access Required',\n          message: 'This App needs to Access your location',\n          buttonPositive:'ok'\n\n        }\n      );\n      if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n        //To Check, If Permission is granted\n        alert('Location Permission Granted.');\n      }}\n      catch (err) { return callback && callback(err); }}\n\n    useEffect (() => {\n      if(Platform.OS === 'android'){\n        androidPermission();\n      }\n      else{\n        //ios\n        Geolocation.requestAuthorization();\n\n      }\n    },[])\n  return (\n    <Root/>\n \n  );\n};\nexport default App;"],"mappings":";AACA,OAAO,8BAAP;AACA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;;AAEA,OAAOC,IAAP;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,WAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,IAAP;;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,IAAMC,iBAAiB,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEAC,kBAAkB,CAACC,OAAnB,CACpBD,kBAAkB,CAACE,WAAnB,CAA+BC,oBADX,EAEpB;cACEC,KAAK,EAAE,0BADT;cAEEC,OAAO,EAAE,wCAFX;cAGEC,cAAc,EAAC;YAHjB,CAFoB,CAFA;;UAAA;YAEhBC,OAFgB;;YAWtB,IAAIA,OAAO,KAAKP,kBAAkB,CAACQ,OAAnB,CAA2BC,OAA3C,EAAoD;cAElDC,KAAK,CAAC,8BAAD,CAAL;YACD;;YAdqB;YAAA;;UAAA;YAAA;YAAA;YAAA,iCAeDC,QAAQ,IAAIA,QAAQ,aAfnB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA1B;;EAiBEhB,SAAS,CAAE,YAAM;IACf,IAAGiB,QAAQ,CAACC,EAAT,KAAgB,SAAnB,EAA6B;MAC3Bd,iBAAiB;IAClB,CAFD,MAGI;MAEFe,WAAW,CAACC,oBAAZ;IAED;EACF,CATQ,EASP,EATO,CAAT;EAUF,OACE,KAAC,IAAD,KADF;AAID,CAhCD;;AAiCA,eAAejB,GAAf"},"metadata":{},"sourceType":"module"}