{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Destination = function Destination(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fromText = _useState2[0],\n      setFromText = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destinationText = _useState4[0],\n      setDestinationText = _useState4[1];\n\n  return _jsx(SafeAreaView, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(GooglePlacesAutocomplete, {\n        placeholder: \"Search\",\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          console.log(data, details);\n        },\n        query: {\n          key: 'AIzaSyDPvVgFA0cmbGBoq3hm69SNm6nRLbcLS5o',\n          language: 'en'\n        },\n        requestUrl: {\n          useOnPlatform: 'web',\n          url: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyDPvVgFA0cmbGBoq3hm69SNm6nRLbcLS5o&libraries=places&callback=initMap',\n          headers: {\n            Authorization: \"an auth token\"\n          }\n        }\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: '#eee',\n    height: '100%'\n  },\n  TextInput: {\n    height: 50,\n    backgroundColor: '#eee',\n    marginVertical: 5\n  }\n});\nexport default Destination;","map":{"version":3,"names":["React","useState","AntDesign","GooglePlacesAutocomplete","Destination","props","fromText","setFromText","destinationText","setDestinationText","styles","container","data","details","console","log","key","language","useOnPlatform","url","headers","Authorization","StyleSheet","create","padding","backgroundColor","height","TextInput","marginVertical"],"sources":["C:/Users/josho/Downloads/healthWetu/healthWetu/screens/HomeScreen/DestinationSearch2/Index.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, Text, Image, TouchableOpacity, View,TextInput, SafeAreaView } from 'react-native';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\n\r\n\r\n\r\n//import styles from './styles.js';\r\nconst Destination = (props) => {\r\n    const [fromText, setFromText] = useState(\"\")\r\n    const [destinationText,setDestinationText]= useState()\r\n    return(\r\n        <SafeAreaView>\r\n        <View style = {styles.container}>\r\n       \r\n            \r\n            <GooglePlacesAutocomplete\r\n      placeholder='Search'\r\n      onPress={(data, details = null) => {\r\n        // 'details' is provided when fetchDetails = true\r\n        console.log(data, details);\r\n      }}\r\n      query={{\r\n        key: 'AIzaSyDPvVgFA0cmbGBoq3hm69SNm6nRLbcLS5o',\r\n        language: 'en',\r\n      }}\r\n      requestUrl={{\r\n        useOnPlatform: 'web', // or \"all\"\r\n        url:\r\n          'https://maps.googleapis.com/maps/api/js?key=AIzaSyDPvVgFA0cmbGBoq3hm69SNm6nRLbcLS5o&libraries=places&callback=initMap', // or any proxy server that hits https://maps.googleapis.com/maps/api\r\n        headers: {\r\n          Authorization: `an auth token`, // if required for your proxy\r\n        },\r\n      }}\r\n     \r\n/>\r\n\r\n        </View>\r\n        \r\n        </SafeAreaView>\r\n        \r\n\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\ncontainer:{\r\n padding: 10,\r\n backgroundColor: '#eee',\r\n height:'100%',\r\n \r\n       \r\n},\r\n    TextInput:{\r\n    \r\n    height:50,\r\n    backgroundColor:'#eee',\r\n    marginVertical:5,\r\n},\r\n    \r\n   \r\n})\r\nexport default Destination"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;;AAEA,OAAOC,SAAP;AACA,SAASC,wBAAT,QAAyC,yCAAzC;;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;EAC3B,gBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA4CN,QAAQ,EAApD;EAAA;EAAA,IAAOO,eAAP;EAAA,IAAuBC,kBAAvB;;EACA,OACI,KAAC,YAAD;IAAA,UACA,KAAC,IAAD;MAAM,KAAK,EAAIC,MAAM,CAACC,SAAtB;MAAA,UAGI,KAAC,wBAAD;QACN,WAAW,EAAC,QADN;QAEN,OAAO,EAAE,iBAACC,IAAD,EAA0B;UAAA,IAAnBC,OAAmB,uEAAT,IAAS;UAEjCC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;QACD,CALK;QAMN,KAAK,EAAE;UACLG,GAAG,EAAE,yCADA;UAELC,QAAQ,EAAE;QAFL,CAND;QAUN,UAAU,EAAE;UACVC,aAAa,EAAE,KADL;UAEVC,GAAG,EACD,uHAHQ;UAIVC,OAAO,EAAE;YACPC,aAAa;UADN;QAJC;MAVN;IAHJ;EADA,EADJ;AAgCH,CAnCD;;AAoCA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EACjCZ,SAAS,EAAC;IACTa,OAAO,EAAE,EADA;IAETC,eAAe,EAAE,MAFR;IAGTC,MAAM,EAAC;EAHE,CADuB;EAQ7BC,SAAS,EAAC;IAEVD,MAAM,EAAC,EAFG;IAGVD,eAAe,EAAC,MAHN;IAIVG,cAAc,EAAC;EAJL;AARmB,CAAlB,CAAf;AAiBA,eAAexB,WAAf"},"metadata":{},"sourceType":"module"}