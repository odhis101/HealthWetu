{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport Constants from 'expo-constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Destination = function Destination(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      fromText = _useState2[0],\n      setFromText = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destinationText = _useState4[0],\n      setDestinationText = _useState4[1];\n\n  return _jsx(View, {\n    children: _jsx(GooglePlacesAutocomplete, {\n      placeholder: \"Search\",\n      onPress: function onPress(data) {\n        var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        console.log(data, details);\n      },\n      query: {\n        key: 'AIzaSyAS1q7CcWFLCzhNLchzu6d0GZLJIm_yjN4',\n        language: 'en'\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 40,\n    flex: 1,\n    padding: 10,\n    paddingTop: Constants.statusBarHeight + 10,\n    backgroundColor: '#ecf0f1'\n  },\n  maps: {\n    height: '100%',\n    backgroundColor: 'black'\n  },\n  container: {\n    marginTop: 40,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  inputText: {\n    fontSize: 14,\n    color: 'black'\n  },\n  Timebar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: 35,\n    padding: 10,\n    backgroundColor: '#fff',\n    borderRadius: 50,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  },\n  inputBox: {\n    backgroundColor: '#fff',\n    margin: 10,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  }\n});\nexport default Destination;","map":{"version":3,"names":["React","useState","GooglePlacesAutocomplete","AntDesign","Constants","Destination","props","fromText","setFromText","destinationText","setDestinationText","data","details","console","log","key","language","styles","StyleSheet","create","container","marginTop","flex","padding","paddingTop","statusBarHeight","backgroundColor","maps","height","marginLeft","marginRight","inputText","fontSize","color","Timebar","flexDirection","justifyContent","width","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","inputBox","margin","alignItems"],"sources":["C:/Users/josho/Downloads/healthWetu/healthWetu/screens/HomeScreen/DestinationSearch/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, Text, Image, TouchableOpacity, View,TextInput } from 'react-native';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport Constants from 'expo-constants';\r\n\r\n//import styles from './styles.js';\r\nconst Destination = (props) => {\r\n    const [fromText, setFromText] = useState()\r\n    const [destinationText,setDestinationText] = useState();\r\n   \r\n    return(\r\n        <View>\r\n            {/* \r\n            <View style ={styles.container}>\r\n            <View style ={styles.Timebar}>\r\n            <AntDesign name ={'arrowleft'} size ={12} color={'red'}></AntDesign> \r\n            \r\n            </View>\r\n            <View style={styles.inputBox}>\r\n            <TextInput value={fromText} onChangeText = {setFromText}placeholder=\"Current Location\" style={styles.inputText}></TextInput>\r\n            <View style ={styles.Timebar}>\r\n            <AntDesign name ={'arrowright'} size ={16} color={'red'}></AntDesign> \r\n            \r\n            </View>\r\n\r\n            </View>\r\n            <View style={styles.inputBox}>\r\n            <TextInput value={destinationText} onChangeText = {setDestinationText} placeholder=\"Which Hospital?\" style={styles.inputText}></TextInput>\r\n            <View style ={styles.Timebar}>\r\n            <AntDesign name ={'arrowright'} size ={16} color={'red'}></AntDesign> \r\n            \r\n            </View>\r\n            \r\n    </View>\r\n    \r\n      </View>\r\n\r\n        </View>\r\n    \r\n    */}\r\n          <GooglePlacesAutocomplete\r\n      placeholder='Search'\r\n      onPress={(data, details = null) => {\r\n        // 'details' is provided when fetchDetails = true\r\n        console.log(data, details);\r\n      }}\r\n      query={{\r\n        key: 'AIzaSyAS1q7CcWFLCzhNLchzu6d0GZLJIm_yjN4',\r\n        language: 'en',\r\n      }}\r\n    />\r\n          \r\n        </View>\r\n        \r\n\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop:40,\r\n        flex: 1,\r\n        padding: 10,\r\n        paddingTop: Constants.statusBarHeight + 10,\r\n        backgroundColor: '#ecf0f1',\r\n      },\r\n    maps:{\r\n\r\n        height:'100%',\r\n        backgroundColor:'black',\r\n    },\r\n    container:{\r\n        marginTop:40,\r\n        marginLeft:10,\r\n        marginRight:10,\r\n     \r\n    },\r\n  \r\n    inputText:{\r\n        fontSize:14,\r\n        color:'black',\r\n\r\n\r\n        \r\n    },\r\n    Timebar:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        width:35,\r\n        padding:10,\r\n        backgroundColor:'#fff',\r\n        borderRadius:50,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4.84,\r\n\r\n        elevation: 5,\r\n\r\n    },\r\n    inputBox:{\r\n        backgroundColor:'#fff',\r\n        margin:10,\r\n        padding:10,\r\n        flexDirection:'row',\r\n        justifyContent: 'space-between',\r\n        alignItems:'center',\r\n        borderRadius:10,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4.84,\r\n\r\n        elevation: 5,\r\n    },\r\n})\r\nexport default Destination"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAEA,SAASC,wBAAT,QAAyC,yCAAzC;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;EAC3B,gBAAgCL,QAAQ,EAAxC;EAAA;EAAA,IAAOM,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA6CP,QAAQ,EAArD;EAAA;EAAA,IAAOQ,eAAP;EAAA,IAAuBC,kBAAvB;;EAEA,OACI,KAAC,IAAD;IAAA,UA6BE,KAAC,wBAAD;MACJ,WAAW,EAAC,QADR;MAEJ,OAAO,EAAE,iBAACC,IAAD,EAA0B;QAAA,IAAnBC,OAAmB,uEAAT,IAAS;QAEjCC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;MACD,CALG;MAMJ,KAAK,EAAE;QACLG,GAAG,EAAE,yCADA;QAELC,QAAQ,EAAE;MAFL;IANH;EA7BF,EADJ;AA8CH,CAlDD;;AAmDA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC7BC,SAAS,EAAE;IACPC,SAAS,EAAC,EADH;IAEPC,IAAI,EAAE,CAFC;IAGPC,OAAO,EAAE,EAHF;IAIPC,UAAU,EAAEpB,SAAS,CAACqB,eAAV,GAA4B,EAJjC;IAKPC,eAAe,EAAE;EALV,CADkB;EAQ7BC,IAAI,EAAC;IAEDC,MAAM,EAAC,MAFN;IAGDF,eAAe,EAAC;EAHf,CARwB;EAa7BN,SAAS,EAAC;IACNC,SAAS,EAAC,EADJ;IAENQ,UAAU,EAAC,EAFL;IAGNC,WAAW,EAAC;EAHN,CAbmB;EAoB7BC,SAAS,EAAC;IACNC,QAAQ,EAAC,EADH;IAENC,KAAK,EAAC;EAFA,CApBmB;EA2B7BC,OAAO,EAAC;IACJC,aAAa,EAAC,KADV;IAEJC,cAAc,EAAC,eAFX;IAGJC,KAAK,EAAC,EAHF;IAIJd,OAAO,EAAC,EAJJ;IAKJG,eAAe,EAAC,MALZ;IAMJY,YAAY,EAAC,EANT;IAOJC,WAAW,EAAE,MAPT;IAQJC,YAAY,EAAE;MACVH,KAAK,EAAE,CADG;MAEVT,MAAM,EAAE;IAFE,CARV;IAYJa,aAAa,EAAE,IAZX;IAaJC,YAAY,EAAE,IAbV;IAeJC,SAAS,EAAE;EAfP,CA3BqB;EA6C7BC,QAAQ,EAAC;IACLlB,eAAe,EAAC,MADX;IAELmB,MAAM,EAAC,EAFF;IAGLtB,OAAO,EAAC,EAHH;IAILY,aAAa,EAAC,KAJT;IAKLC,cAAc,EAAE,eALX;IAMLU,UAAU,EAAC,QANN;IAOLR,YAAY,EAAC,EAPR;IAQLC,WAAW,EAAE,MARR;IASLC,YAAY,EAAE;MACVH,KAAK,EAAE,CADG;MAEVT,MAAM,EAAE;IAFE,CATT;IAaLa,aAAa,EAAE,IAbV;IAcLC,YAAY,EAAE,IAdT;IAgBLC,SAAS,EAAE;EAhBN;AA7CoB,CAAlB,CAAf;AAgEA,eAAetC,WAAf"},"metadata":{},"sourceType":"module"}