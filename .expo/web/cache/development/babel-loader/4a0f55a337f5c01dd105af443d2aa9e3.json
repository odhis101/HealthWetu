{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { defineAnimation } from \"./util\";\nimport { withTiming } from \"./timing\";\nimport { ColorProperties } from \"../UpdateProps\";\nimport { processColor } from \"../Colors\";\nexport function resolvePath(obj, path) {\n  'worklet';\n\n  var keys = Array.isArray(path) ? path : [path];\n  return keys.reduce(function (acc, current) {\n    if (Array.isArray(acc) && typeof current === 'number') {\n      return acc[current];\n    } else if (typeof acc === 'object' && current in acc) {\n      return acc[current];\n    }\n\n    return undefined;\n  }, obj);\n}\nexport function setPath(obj, path, value) {\n  'worklet';\n\n  var keys = Array.isArray(path) ? path : [path];\n  var currObj = obj;\n\n  for (var i = 0; i < keys.length - 1; i++) {\n    currObj = currObj;\n\n    if (!currObj[keys[i]]) {\n      if (typeof keys[i + 1] === 'number') {\n        currObj[keys[i]] = [];\n      } else {\n        currObj[keys[i]] = {};\n      }\n    }\n\n    currObj = currObj[keys[i]];\n  }\n\n  currObj[keys[keys.length - 1]] = value;\n}\nexport function withStyleAnimation(styleAnimations) {\n  'worklet';\n\n  return defineAnimation({}, function () {\n    'worklet';\n\n    var onFrame = function onFrame(animation, now) {\n      var stillGoing = false;\n      var entriesToCheck = [{\n        value: animation.styleAnimations,\n        path: []\n      }];\n\n      while (entriesToCheck.length > 0) {\n        var currentEntry = entriesToCheck.pop();\n\n        if (Array.isArray(currentEntry.value)) {\n          for (var index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index)\n            });\n          }\n        } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n          for (var _i = 0, _Object$keys = Object.keys(currentEntry.value); _i < _Object$keys.length; _i++) {\n            var key = _Object$keys[_i];\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key)\n            });\n          }\n        } else {\n          var currentStyleAnimation = currentEntry.value;\n\n          if (currentStyleAnimation.finished) {\n            continue;\n          }\n\n          var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n\n          if (finished) {\n            currentStyleAnimation.finished = true;\n\n            if (currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(true);\n            }\n          } else {\n            stillGoing = true;\n          }\n\n          if (ColorProperties.includes(currentEntry.path[0])) {\n            currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n          }\n\n          setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n        }\n      }\n\n      return !stillGoing;\n    };\n\n    var onStart = function onStart(animation, value, now, previousAnimation) {\n      var entriesToCheck = [{\n        value: styleAnimations,\n        path: []\n      }];\n\n      while (entriesToCheck.length > 0) {\n        var currentEntry = entriesToCheck.pop();\n\n        if (Array.isArray(currentEntry.value)) {\n          for (var index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index)\n            });\n          }\n        } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n          for (var _i2 = 0, _Object$keys2 = Object.keys(currentEntry.value); _i2 < _Object$keys2.length; _i2++) {\n            var key = _Object$keys2[_i2];\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key)\n            });\n          }\n        } else {\n          var prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n          var prevVal = resolvePath(value, currentEntry.path);\n\n          if (prevAnimation && !prevVal) {\n            prevVal = prevAnimation.current;\n          }\n\n          setPath(animation.current, currentEntry.path, prevVal);\n          var currentAnimation = void 0;\n\n          if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n            currentAnimation = withTiming(currentEntry.value, {\n              duration: 0\n            });\n            setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n          } else {\n            currentAnimation = currentEntry.value;\n          }\n\n          currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n        }\n      }\n    };\n\n    var callback = function callback(finished) {\n      if (!finished) {\n        var animationsToCheck = [styleAnimations];\n\n        while (animationsToCheck.length > 0) {\n          var currentAnimation = animationsToCheck.pop();\n\n          if (Array.isArray(currentAnimation)) {\n            for (var _iterator = _createForOfIteratorHelperLoose(currentAnimation), _step; !(_step = _iterator()).done;) {\n              var element = _step.value;\n              animationsToCheck.push(element);\n            }\n          } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n            for (var _i3 = 0, _Object$values = Object.values(currentAnimation); _i3 < _Object$values.length; _i3++) {\n              var value = _Object$values[_i3];\n              animationsToCheck.push(value);\n            }\n          } else {\n            var currentStyleAnimation = currentAnimation;\n\n            if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(false);\n            }\n          }\n        }\n      }\n    };\n\n    return {\n      isHigherOrder: true,\n      onFrame: onFrame,\n      onStart: onStart,\n      current: {},\n      styleAnimations: styleAnimations,\n      callback: callback\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","withTiming","ColorProperties","processColor","resolvePath","obj","path","keys","Array","isArray","reduce","acc","current","undefined","setPath","value","currObj","i","length","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","Object","key","currentStyleAnimation","finished","callback","includes","onStart","previousAnimation","prevAnimation","prevVal","currentAnimation","duration","animationsToCheck","element","values","isHigherOrder"],"sources":["C:/Users/josho/Downloads/healthWetu/healthwetu/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"sourcesContent":["import { defineAnimation } from './util';\r\nimport { withTiming } from './timing';\r\nimport { ColorProperties } from '../UpdateProps';\r\nimport { processColor } from '../Colors';\r\n// resolves path to value for nested objects\r\n// if path cannot be resolved returns undefined\r\nexport function resolvePath(obj, path) {\r\n    'worklet';\r\n    const keys = Array.isArray(path) ? path : [path];\r\n    return keys.reduce((acc, current) => {\r\n        if (Array.isArray(acc) && typeof current === 'number') {\r\n            return acc[current];\r\n        }\r\n        else if (typeof acc === 'object' && current in acc) {\r\n            return acc[current];\r\n        }\r\n        return undefined;\r\n    }, obj);\r\n}\r\nexport function setPath(obj, path, value) {\r\n    'worklet';\r\n    const keys = Array.isArray(path) ? path : [path];\r\n    let currObj = obj;\r\n    for (let i = 0; i < keys.length - 1; i++) {\r\n        // creates entry if there isn't one\r\n        currObj = currObj;\r\n        if (!currObj[keys[i]]) {\r\n            // if next key is a number create an array\r\n            if (typeof keys[i + 1] === 'number') {\r\n                currObj[keys[i]] = [];\r\n            }\r\n            else {\r\n                currObj[keys[i]] = {};\r\n            }\r\n        }\r\n        currObj = currObj[keys[i]];\r\n    }\r\n    currObj[keys[keys.length - 1]] =\r\n        value;\r\n}\r\nexport function withStyleAnimation(styleAnimations) {\r\n    'worklet';\r\n    return defineAnimation({}, () => {\r\n        'worklet';\r\n        const onFrame = (animation, now) => {\r\n            let stillGoing = false;\r\n            const entriesToCheck = [\r\n                { value: animation.styleAnimations, path: [] },\r\n            ];\r\n            while (entriesToCheck.length > 0) {\r\n                const currentEntry = entriesToCheck.pop();\r\n                if (Array.isArray(currentEntry.value)) {\r\n                    for (let index = 0; index < currentEntry.value.length; index++) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[index],\r\n                            path: currentEntry.path.concat(index),\r\n                        });\r\n                    }\r\n                }\r\n                else if (typeof currentEntry.value === 'object' &&\r\n                    currentEntry.value.onFrame === undefined) {\r\n                    // nested object\r\n                    for (const key of Object.keys(currentEntry.value)) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[key],\r\n                            path: currentEntry.path.concat(key),\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    const currentStyleAnimation = currentEntry.value;\r\n                    if (currentStyleAnimation.finished) {\r\n                        continue;\r\n                    }\r\n                    const finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\r\n                    if (finished) {\r\n                        currentStyleAnimation.finished = true;\r\n                        if (currentStyleAnimation.callback) {\r\n                            currentStyleAnimation.callback(true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        stillGoing = true;\r\n                    }\r\n                    if (ColorProperties.includes(currentEntry.path[0])) {\r\n                        currentStyleAnimation.current = processColor(currentStyleAnimation.current);\r\n                    }\r\n                    setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\r\n                }\r\n            }\r\n            return !stillGoing;\r\n        };\r\n        const onStart = (animation, value, now, previousAnimation) => {\r\n            const entriesToCheck = [{ value: styleAnimations, path: [] }];\r\n            while (entriesToCheck.length > 0) {\r\n                const currentEntry = entriesToCheck.pop();\r\n                if (Array.isArray(currentEntry.value)) {\r\n                    for (let index = 0; index < currentEntry.value.length; index++) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[index],\r\n                            path: currentEntry.path.concat(index),\r\n                        });\r\n                    }\r\n                }\r\n                else if (typeof currentEntry.value === 'object' &&\r\n                    currentEntry.value.onStart === undefined) {\r\n                    for (const key of Object.keys(currentEntry.value)) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[key],\r\n                            path: currentEntry.path.concat(key),\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    const prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\r\n                    let prevVal = resolvePath(value, currentEntry.path);\r\n                    if (prevAnimation && !prevVal) {\r\n                        prevVal = prevAnimation.current;\r\n                    }\r\n                    setPath(animation.current, currentEntry.path, prevVal);\r\n                    let currentAnimation;\r\n                    if (typeof currentEntry.value !== 'object' ||\r\n                        !currentEntry.value.onStart) {\r\n                        currentAnimation = withTiming(currentEntry.value, { duration: 0 });\r\n                        setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\r\n                    }\r\n                    else {\r\n                        currentAnimation = currentEntry.value;\r\n                    }\r\n                    currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\r\n                }\r\n            }\r\n        };\r\n        const callback = (finished) => {\r\n            if (!finished) {\r\n                const animationsToCheck = [\r\n                    styleAnimations,\r\n                ];\r\n                while (animationsToCheck.length > 0) {\r\n                    const currentAnimation = animationsToCheck.pop();\r\n                    if (Array.isArray(currentAnimation)) {\r\n                        for (const element of currentAnimation) {\r\n                            animationsToCheck.push(element);\r\n                        }\r\n                    }\r\n                    else if (typeof currentAnimation === 'object' &&\r\n                        currentAnimation.onStart === undefined) {\r\n                        for (const value of Object.values(currentAnimation)) {\r\n                            animationsToCheck.push(value);\r\n                        }\r\n                    }\r\n                    else {\r\n                        const currentStyleAnimation = currentAnimation;\r\n                        if (!currentStyleAnimation.finished &&\r\n                            currentStyleAnimation.callback) {\r\n                            currentStyleAnimation.callback(false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return {\r\n            isHigherOrder: true,\r\n            onFrame,\r\n            onStart,\r\n            current: {},\r\n            styleAnimations,\r\n            callback,\r\n        };\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}