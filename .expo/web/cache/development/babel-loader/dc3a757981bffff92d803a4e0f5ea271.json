{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport Calling from \"../../../components/calling\";\nimport OurButton from \"../../../components/GoToButton\";\nimport ModuleButton from \"../../../components/moduleButton\";\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Destination = function Destination(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(originPlace),\n      _useState2 = _slicedToArray(_useState, 2),\n      originPlace = _useState2[0],\n      setOriginPlace = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Desitnation = _useState4[0],\n      setDesitnation = _useState4[1];\n\n  var pressHandler = function pressHandler() {\n    navigation.navigate('searchResults');\n  };\n\n  useEffect(function () {\n    if (originPlace && Desitnation) {\n      console.log(originPlace);\n      navigation.navigate('searchResults', originPlace, Desitnation);\n    }\n  });\n  return useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []), _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.inputBox,\n        children: [_jsx(GooglePlacesAutocomplete, {\n          placeholder: \"What is your Current Location\",\n          onPress: function onPress(data) {\n            var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            setOriginPlace({\n              data: data,\n              details: details\n            });\n          },\n          enablePoweredBygoogle: false,\n          fetchDetails: true,\n          currentLocation: true,\n          currentLocationLabel: \"Current Location\",\n          query: {\n            key: 'AIzaSyAeRdORzU5z5rUedWcqGLZxRwE_6w9isRc',\n            language: 'en',\n            components: 'country:ke'\n          }\n        }), _jsx(View, {\n          style: styles.Timebar,\n          children: _jsx(AntDesign, {\n            name: 'arrowright',\n            size: 16,\n            color: 'red'\n          })\n        })]\n      }), _jsx(ModuleButton, {\n        text: \"Current Locations  \",\n        onPress: pressHandler\n      }), _jsxs(View, {\n        style: styles.inputBox,\n        children: [_jsx(GooglePlacesAutocomplete, {\n          placeholder: \"Which hospital are you going to?\",\n          onPress: function onPress(data) {\n            var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            setDesitnation({\n              data: data,\n              details: details\n            });\n          },\n          enablePoweredBygoogle: false,\n          fetchDetails: true,\n          query: {\n            key: 'AIzaSyAeRdORzU5z5rUedWcqGLZxRwE_6w9isRc',\n            language: 'en',\n            components: 'country:ke'\n          }\n        }), _jsx(View, {\n          style: styles.Timebar,\n          children: _jsx(AntDesign, {\n            name: 'arrowright',\n            size: 16,\n            color: 'red'\n          })\n        })]\n      }), _jsx(OurButton, {\n        text: \"Nearest Hospital\",\n        onPress: pressHandler\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 40,\n    marginLeft: 10,\n    marginRight: 10,\n    height: '100%'\n  },\n  inputText: {\n    fontSize: 14,\n    color: 'black'\n  },\n  Timebar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: 35,\n    padding: 10,\n    backgroundColor: '#fff',\n    borderRadius: 50,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  },\n  inputBox: {\n    backgroundColor: '#fff',\n    margin: 10,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  }\n});\nexport default Destination;","map":{"version":3,"names":["React","useState","useEffect","GooglePlacesAutocomplete","AntDesign","Calling","OurButton","ModuleButton","Location","Destination","navigation","originPlace","setOriginPlace","Desitnation","setDesitnation","pressHandler","navigate","console","log","requestForegroundPermissionsAsync","status","setErrorMsg","getCurrentPositionAsync","location","setLocation","styles","container","inputBox","data","details","key","language","components","Timebar","StyleSheet","create","marginTop","marginLeft","marginRight","height","inputText","fontSize","color","flexDirection","justifyContent","width","padding","backgroundColor","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","margin","alignItems"],"sources":["C:/Users/josho/Downloads/healthWetu/healthWetu/screens/HomeScreen/DestinationSearch/index.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { StyleSheet, Text, Image, TouchableOpacity, View,TextInput,Button } from 'react-native';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport Calling from '../../../components/calling';\r\nimport OurButton from '../../../components/GoToButton';\r\nimport ModuleButton from '../../../components/moduleButton';\r\nimport * as Location from 'expo-location';\r\n\r\n\r\n   \r\n    \r\n   \r\nconst Destination = ({navigation}) => {\r\n \r\n\r\n   const [originPlace,setOriginPlace]= useState(originPlace)\r\n   const [Desitnation,setDesitnation]= useState()\r\n\r\n   const pressHandler =() =>{\r\n    navigation.navigate('searchResults');\r\n    \r\n}\r\n   useEffect(() => {\r\n    if (originPlace && Desitnation) {\r\n        console.log(originPlace)\r\n        navigation.navigate('searchResults', \r\n        originPlace,\r\n        Desitnation\r\n        \r\n        );\r\n\r\n    }})\r\n  \r\n    \r\n    \r\n \r\n    return(\r\n        useEffect(() => {\r\n            (async () => {\r\n              \r\n              let { status } = await Location.requestForegroundPermissionsAsync();\r\n              if (status !== 'granted') {\r\n                setErrorMsg('Permission to access location was denied');\r\n                return;\r\n              }\r\n        \r\n              let location = await Location.getCurrentPositionAsync({});\r\n              setLocation(location);\r\n            })();\r\n          }, []),\r\n        <View>\r\n            <View style ={styles.container}>\r\n            <View style={styles.inputBox}>\r\n            <GooglePlacesAutocomplete\r\n      placeholder='What is your Current Location'\r\n      onPress={(data, details = null) => {\r\n        // 'details' is provided when fetchDetails = true\r\n        setOriginPlace({data, details});\r\n\r\n        //console.log(data, details);\r\n      }}\r\n      enablePoweredBygoogle={false}\r\n      fetchDetails= {true}\r\n      currentLocation={true}\r\n      currentLocationLabel=\"Current Location\"\r\n      query={{\r\n        key: 'AIzaSyAeRdORzU5z5rUedWcqGLZxRwE_6w9isRc',\r\n        language: 'en',\r\n        components: 'country:ke',\r\n      }}\r\n    />\r\n            <View style ={styles.Timebar}>\r\n            <AntDesign name ={'arrowright'} size ={16} color={'red'}></AntDesign> \r\n            </View>\r\n            </View>\r\n            <ModuleButton text = 'Current Locations  ' onPress={pressHandler}/>\r\n            <View style={styles.inputBox}>\r\n            <GooglePlacesAutocomplete\r\n      placeholder='Which hospital are you going to?'\r\n      onPress={(data, details = null) => {\r\n        // 'details' is provided when fetchDetails = true\r\n        setDesitnation({data, details});\r\n       // console.log(data, details);\r\n      }}\r\n      enablePoweredBygoogle={false}\r\n      fetchDetails= {true}\r\n      query={{\r\n        key: 'AIzaSyAeRdORzU5z5rUedWcqGLZxRwE_6w9isRc',\r\n        language: 'en',\r\n        components: 'country:ke',\r\n      }}\r\n    />\r\n            <View style ={styles.Timebar}>\r\n            <AntDesign name ={'arrowright'} size ={16} color={'red'}></AntDesign> \r\n            </View>\r\n            </View>\r\n            <OurButton text='Nearest Hospital' onPress={pressHandler}/>\r\n    \r\n            \r\n        </View>\r\n       \r\n    \r\n        </View>\r\n        \r\n\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        marginTop:40,\r\n        marginLeft:10,\r\n        marginRight:10,\r\n        height:'100%'\r\n    },\r\n  \r\n    inputText:{\r\n        fontSize:14,\r\n        color:'black',\r\n        \r\n    },\r\n    Timebar:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        width:35,\r\n        padding:10,\r\n        backgroundColor:'#fff',\r\n        borderRadius:50,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4.84,\r\n\r\n        elevation: 5,\r\n\r\n    },\r\n    inputBox:{\r\n        backgroundColor:'#fff',\r\n        margin:10,\r\n        padding:10,\r\n        flexDirection:'row',\r\n        justifyContent: 'space-between',\r\n        alignItems:'center',\r\n        borderRadius:10,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4.84,\r\n\r\n        elevation: 5,\r\n    },\r\n})\r\nexport default Destination"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;;;;;;;;AAEA,SAASC,wBAAT,QAAyC,yCAAzC;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;EAAA,IAAhBC,UAAgB,QAAhBA,UAAgB;;EAGnC,gBAAoCT,QAAQ,CAACU,WAAD,CAA5C;EAAA;EAAA,IAAOA,WAAP;EAAA,IAAmBC,cAAnB;;EACA,iBAAoCX,QAAQ,EAA5C;EAAA;EAAA,IAAOY,WAAP;EAAA,IAAmBC,cAAnB;;EAEA,IAAMC,YAAY,GAAE,SAAdA,YAAc,GAAK;IACxBL,UAAU,CAACM,QAAX,CAAoB,eAApB;EAEH,CAHE;;EAIAd,SAAS,CAAC,YAAM;IACf,IAAIS,WAAW,IAAIE,WAAnB,EAAgC;MAC5BI,OAAO,CAACC,GAAR,CAAYP,WAAZ;MACAD,UAAU,CAACM,QAAX,CAAoB,eAApB,EACAL,WADA,EAEAE,WAFA;IAMH;EAAC,CATM,CAAT;EAcC,OACIX,SAAS,CAAC,YAAM;IACZ,CAAC;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAEwBM,QAAQ,CAACW,iCAAT,EAFxB;;YAAA;cAAA;cAEOC,MAFP,yBAEOA,MAFP;;cAAA,MAGKA,MAAM,KAAK,SAHhB;gBAAA;gBAAA;cAAA;;cAIGC,WAAW,CAAC,0CAAD,CAAX;cAJH;;YAAA;cAAA;cAAA,iCAQsBb,QAAQ,CAACc,uBAAT,CAAiC,EAAjC,CARtB;;YAAA;cAQKC,QARL;cASCC,WAAW,CAACD,QAAD,CAAX;;YATD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD;EAWD,CAZM,EAYJ,EAZI,CAAT,EAaA,KAAC,IAAD;IAAA,UACI,MAAC,IAAD;MAAM,KAAK,EAAGE,MAAM,CAACC,SAArB;MAAA,WACA,MAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,QAApB;QAAA,WACA,KAAC,wBAAD;UACN,WAAW,EAAC,+BADN;UAEN,OAAO,EAAE,iBAACC,IAAD,EAA0B;YAAA,IAAnBC,OAAmB,uEAAT,IAAS;YAEjCjB,cAAc,CAAC;cAACgB,IAAI,EAAJA,IAAD;cAAOC,OAAO,EAAPA;YAAP,CAAD,CAAd;UAGD,CAPK;UAQN,qBAAqB,EAAE,KARjB;UASN,YAAY,EAAG,IATT;UAUN,eAAe,EAAE,IAVX;UAWN,oBAAoB,EAAC,kBAXf;UAYN,KAAK,EAAE;YACLC,GAAG,EAAE,yCADA;YAELC,QAAQ,EAAE,IAFL;YAGLC,UAAU,EAAE;UAHP;QAZD,EADA,EAmBA,KAAC,IAAD;UAAM,KAAK,EAAGP,MAAM,CAACQ,OAArB;UAAA,UACA,KAAC,SAAD;YAAW,IAAI,EAAG,YAAlB;YAAgC,IAAI,EAAG,EAAvC;YAA2C,KAAK,EAAE;UAAlD;QADA,EAnBA;MAAA,EADA,EAwBA,KAAC,YAAD;QAAc,IAAI,EAAG,qBAArB;QAA2C,OAAO,EAAElB;MAApD,EAxBA,EAyBA,MAAC,IAAD;QAAM,KAAK,EAAEU,MAAM,CAACE,QAApB;QAAA,WACA,KAAC,wBAAD;UACN,WAAW,EAAC,kCADN;UAEN,OAAO,EAAE,iBAACC,IAAD,EAA0B;YAAA,IAAnBC,OAAmB,uEAAT,IAAS;YAEjCf,cAAc,CAAC;cAACc,IAAI,EAAJA,IAAD;cAAOC,OAAO,EAAPA;YAAP,CAAD,CAAd;UAED,CANK;UAON,qBAAqB,EAAE,KAPjB;UAQN,YAAY,EAAG,IART;UASN,KAAK,EAAE;YACLC,GAAG,EAAE,yCADA;YAELC,QAAQ,EAAE,IAFL;YAGLC,UAAU,EAAE;UAHP;QATD,EADA,EAgBA,KAAC,IAAD;UAAM,KAAK,EAAGP,MAAM,CAACQ,OAArB;UAAA,UACA,KAAC,SAAD;YAAW,IAAI,EAAG,YAAlB;YAAgC,IAAI,EAAG,EAAvC;YAA2C,KAAK,EAAE;UAAlD;QADA,EAhBA;MAAA,EAzBA,EA6CA,KAAC,SAAD;QAAW,IAAI,EAAC,kBAAhB;QAAmC,OAAO,EAAElB;MAA5C,EA7CA;IAAA;EADJ,EAdJ;AAsEH,CA9FD;;AA+FA,IAAMU,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;EAC7BT,SAAS,EAAC;IACNU,SAAS,EAAC,EADJ;IAENC,UAAU,EAAC,EAFL;IAGNC,WAAW,EAAC,EAHN;IAINC,MAAM,EAAC;EAJD,CADmB;EAQ7BC,SAAS,EAAC;IACNC,QAAQ,EAAC,EADH;IAENC,KAAK,EAAC;EAFA,CARmB;EAa7BT,OAAO,EAAC;IACJU,aAAa,EAAC,KADV;IAEJC,cAAc,EAAC,eAFX;IAGJC,KAAK,EAAC,EAHF;IAIJC,OAAO,EAAC,EAJJ;IAKJC,eAAe,EAAC,MALZ;IAMJC,YAAY,EAAC,EANT;IAOJC,WAAW,EAAE,MAPT;IAQJC,YAAY,EAAE;MACVL,KAAK,EAAE,CADG;MAEVN,MAAM,EAAE;IAFE,CARV;IAYJY,aAAa,EAAE,IAZX;IAaJC,YAAY,EAAE,IAbV;IAeJC,SAAS,EAAE;EAfP,CAbqB;EA+B7B1B,QAAQ,EAAC;IACLoB,eAAe,EAAC,MADX;IAELO,MAAM,EAAC,EAFF;IAGLR,OAAO,EAAC,EAHH;IAILH,aAAa,EAAC,KAJT;IAKLC,cAAc,EAAE,eALX;IAMLW,UAAU,EAAC,QANN;IAOLP,YAAY,EAAC,EAPR;IAQLC,WAAW,EAAE,MARR;IASLC,YAAY,EAAE;MACVL,KAAK,EAAE,CADG;MAEVN,MAAM,EAAE;IAFE,CATT;IAaLY,aAAa,EAAE,IAbV;IAcLC,YAAY,EAAE,IAdT;IAgBLC,SAAS,EAAE;EAhBN;AA/BoB,CAAlB,CAAf;AAkDA,eAAe5C,WAAf"},"metadata":{},"sourceType":"module"}