{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { withTiming, withSpring } from \"../../animation\";\nimport { BaseAnimationBuilder } from \"./BaseAnimationBuilder\";\nexport var ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  _inherits(ComplexAnimationBuilder, _BaseAnimationBuilder);\n\n  var _super = _createSuper(ComplexAnimationBuilder);\n\n  function ComplexAnimationBuilder() {\n    _classCallCheck(this, ComplexAnimationBuilder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      this.type = withSpring;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      this.initialValues = values;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : withTiming;\n      var damping = this.dampingV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n\n      if (type === withTiming) {\n        if (easing) {\n          config.easing = easing;\n        }\n\n        if (duration) {\n          config.duration = duration;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      } else {\n        if (damping) {\n          config.damping = damping;\n        }\n\n        if (mass) {\n          config.mass = mass;\n        }\n\n        if (stiffness) {\n          config.stiffness = stiffness;\n        }\n\n        if (overshootClamping) {\n          config.overshootClamping = overshootClamping;\n        }\n\n        if (restDisplacementThreshold) {\n          config.restDisplacementThreshold = restDisplacementThreshold;\n        }\n\n        if (restSpeedThreshold) {\n          config.restSpeedThreshold = restSpeedThreshold;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      }\n\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      var instance = this.createInstance();\n      return instance.springify();\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      var instance = this.createInstance();\n      return instance.withInitialValues(values);\n    }\n  }]);\n\n  return ComplexAnimationBuilder;\n}(BaseAnimationBuilder);","map":{"version":3,"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","easingFunction","easingV","degree","rotateV","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","values","initialValues","duration","durationV","easing","rotate","animation","config","instance","createInstance","springify","withInitialValues"],"sources":["C:/Users/josho/Downloads/healthWetu/healthwetu/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/animationBuilder/ComplexAnimationBuilder.js"],"sourcesContent":["import { withTiming, withSpring } from '../../animation';\r\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\r\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\r\n    static easing(easingFunction) {\r\n        const instance = this.createInstance();\r\n        return instance.easing(easingFunction);\r\n    }\r\n    easing(easingFunction) {\r\n        this.easingV = easingFunction;\r\n        return this;\r\n    }\r\n    static rotate(degree) {\r\n        const instance = this.createInstance();\r\n        return instance.rotate(degree);\r\n    }\r\n    rotate(degree) {\r\n        this.rotateV = degree;\r\n        return this;\r\n    }\r\n    static springify() {\r\n        const instance = this.createInstance();\r\n        return instance.springify();\r\n    }\r\n    springify() {\r\n        this.type = withSpring;\r\n        return this;\r\n    }\r\n    static damping(damping) {\r\n        const instance = this.createInstance();\r\n        return instance.damping(damping);\r\n    }\r\n    damping(damping) {\r\n        this.dampingV = damping;\r\n        return this;\r\n    }\r\n    static mass(mass) {\r\n        const instance = this.createInstance();\r\n        return instance.mass(mass);\r\n    }\r\n    mass(mass) {\r\n        this.massV = mass;\r\n        return this;\r\n    }\r\n    static stiffness(stiffness) {\r\n        const instance = this.createInstance();\r\n        return instance.stiffness(stiffness);\r\n    }\r\n    stiffness(stiffness) {\r\n        this.stiffnessV = stiffness;\r\n        return this;\r\n    }\r\n    static overshootClamping(overshootClamping) {\r\n        const instance = this.createInstance();\r\n        return instance.overshootClamping(overshootClamping);\r\n    }\r\n    overshootClamping(overshootClamping) {\r\n        this.overshootClampingV = overshootClamping;\r\n        return this;\r\n    }\r\n    static restDisplacementThreshold(restDisplacementThreshold) {\r\n        const instance = this.createInstance();\r\n        return instance.restDisplacementThreshold(restDisplacementThreshold);\r\n    }\r\n    restDisplacementThreshold(restDisplacementThreshold) {\r\n        this.restDisplacementThresholdV = restDisplacementThreshold;\r\n        return this;\r\n    }\r\n    static restSpeedThreshold(restSpeedThreshold) {\r\n        const instance = this.createInstance();\r\n        return instance.restSpeedThreshold(restSpeedThreshold);\r\n    }\r\n    restSpeedThreshold(restSpeedThreshold) {\r\n        this.restSpeedThresholdV = restSpeedThreshold;\r\n        return this;\r\n    }\r\n    static withInitialValues(values) {\r\n        const instance = this.createInstance();\r\n        return instance.withInitialValues(values);\r\n    }\r\n    withInitialValues(values) {\r\n        this.initialValues = values;\r\n        return this;\r\n    }\r\n    getAnimationAndConfig() {\r\n        const duration = this.durationV;\r\n        const easing = this.easingV;\r\n        const rotate = this.rotateV;\r\n        const type = this.type ? this.type : withTiming;\r\n        const damping = this.dampingV;\r\n        const mass = this.massV;\r\n        const stiffness = this.stiffnessV;\r\n        const overshootClamping = this.overshootClampingV;\r\n        const restDisplacementThreshold = this.restDisplacementThresholdV;\r\n        const restSpeedThreshold = this.restSpeedThresholdV;\r\n        const animation = type;\r\n        const config = {};\r\n        if (type === withTiming) {\r\n            if (easing) {\r\n                config.easing = easing;\r\n            }\r\n            if (duration) {\r\n                config.duration = duration;\r\n            }\r\n            if (rotate) {\r\n                config.rotate = rotate;\r\n            }\r\n        }\r\n        else {\r\n            if (damping) {\r\n                config.damping = damping;\r\n            }\r\n            if (mass) {\r\n                config.mass = mass;\r\n            }\r\n            if (stiffness) {\r\n                config.stiffness = stiffness;\r\n            }\r\n            if (overshootClamping) {\r\n                config.overshootClamping = overshootClamping;\r\n            }\r\n            if (restDisplacementThreshold) {\r\n                config.restDisplacementThreshold = restDisplacementThreshold;\r\n            }\r\n            if (restSpeedThreshold) {\r\n                config.restSpeedThreshold = restSpeedThreshold;\r\n            }\r\n            if (rotate) {\r\n                config.rotate = rotate;\r\n            }\r\n        }\r\n        return [animation, config];\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}