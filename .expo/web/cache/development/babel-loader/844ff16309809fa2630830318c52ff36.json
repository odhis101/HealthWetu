{"ast":null,"code":"import findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nexport function getTag(view) {\n  return findNodeHandle(view);\n}\nvar isNativeIndefined = shouldBeUseWeb();\nexport function measure(animatedRef) {\n  'worklet';\n\n  if (!_WORKLET || isNativeIndefined) {\n    console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');\n    return {\n      x: NaN,\n      y: NaN,\n      width: NaN,\n      height: NaN,\n      pageX: NaN,\n      pageY: NaN\n    };\n  }\n\n  var viewTag = animatedRef();\n\n  var result = _measure(viewTag);\n\n  if (result.x === -1234567) {\n    throw new Error(\"The view with tag \" + viewTag + \" could not be measured\");\n  }\n\n  return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n  'worklet';\n\n  if (!_WORKLET || isNativeIndefined) {\n    return;\n  }\n\n  var viewTag = animatedRef();\n\n  _scrollTo(viewTag, x, y, animated);\n}\nexport function setGestureState(handlerTag, newState) {\n  'worklet';\n\n  if (!_WORKLET || isNativeIndefined) {\n    console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n    return;\n  }\n\n  _setGestureState(handlerTag, newState);\n}","map":{"version":3,"names":["shouldBeUseWeb","getTag","view","findNodeHandle","isNativeIndefined","measure","animatedRef","_WORKLET","console","warn","x","NaN","y","width","height","pageX","pageY","viewTag","result","_measure","Error","scrollTo","animated","_scrollTo","setGestureState","handlerTag","newState","_setGestureState"],"sources":["C:/Users/josho/Downloads/healthWetu/healthwetu/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js"],"sourcesContent":["import { findNodeHandle } from 'react-native';\r\nimport { shouldBeUseWeb } from './PlatformChecker';\r\nexport function getTag(view) {\r\n    return findNodeHandle(view);\r\n}\r\nconst isNativeIndefined = shouldBeUseWeb();\r\nexport function measure(animatedRef) {\r\n    'worklet';\r\n    if (!_WORKLET || isNativeIndefined) {\r\n        console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');\r\n        return {\r\n            x: NaN,\r\n            y: NaN,\r\n            width: NaN,\r\n            height: NaN,\r\n            pageX: NaN,\r\n            pageY: NaN,\r\n        };\r\n    }\r\n    const viewTag = animatedRef();\r\n    const result = _measure(viewTag);\r\n    if (result.x === -1234567) {\r\n        throw new Error(`The view with tag ${viewTag} could not be measured`);\r\n    }\r\n    return result;\r\n}\r\nexport function scrollTo(animatedRef, x, y, animated) {\r\n    'worklet';\r\n    if (!_WORKLET || isNativeIndefined) {\r\n        return;\r\n    }\r\n    const viewTag = animatedRef();\r\n    _scrollTo(viewTag, x, y, animated);\r\n}\r\nexport function setGestureState(handlerTag, newState) {\r\n    'worklet';\r\n    if (!_WORKLET || isNativeIndefined) {\r\n        console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\r\n        return;\r\n    }\r\n    _setGestureState(handlerTag, newState);\r\n}\r\n"],"mappings":";AACA,SAASA,cAAT;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACzB,OAAOC,cAAc,CAACD,IAAD,CAArB;AACH;AACD,IAAME,iBAAiB,GAAGJ,cAAc,EAAxC;AACA,OAAO,SAASK,OAAT,CAAiBC,WAAjB,EAA8B;EACjC;;EACA,IAAI,CAACC,QAAD,IAAaH,iBAAjB,EAAoC;IAChCI,OAAO,CAACC,IAAR,CAAa,uEAAb;IACA,OAAO;MACHC,CAAC,EAAEC,GADA;MAEHC,CAAC,EAAED,GAFA;MAGHE,KAAK,EAAEF,GAHJ;MAIHG,MAAM,EAAEH,GAJL;MAKHI,KAAK,EAAEJ,GALJ;MAMHK,KAAK,EAAEL;IANJ,CAAP;EAQH;;EACD,IAAMM,OAAO,GAAGX,WAAW,EAA3B;;EACA,IAAMY,MAAM,GAAGC,QAAQ,CAACF,OAAD,CAAvB;;EACA,IAAIC,MAAM,CAACR,CAAP,KAAa,CAAC,OAAlB,EAA2B;IACvB,MAAM,IAAIU,KAAJ,wBAA+BH,OAA/B,4BAAN;EACH;;EACD,OAAOC,MAAP;AACH;AACD,OAAO,SAASG,QAAT,CAAkBf,WAAlB,EAA+BI,CAA/B,EAAkCE,CAAlC,EAAqCU,QAArC,EAA+C;EAClD;;EACA,IAAI,CAACf,QAAD,IAAaH,iBAAjB,EAAoC;IAChC;EACH;;EACD,IAAMa,OAAO,GAAGX,WAAW,EAA3B;;EACAiB,SAAS,CAACN,OAAD,EAAUP,CAAV,EAAaE,CAAb,EAAgBU,QAAhB,CAAT;AACH;AACD,OAAO,SAASE,eAAT,CAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;EAClD;;EACA,IAAI,CAACnB,QAAD,IAAaH,iBAAjB,EAAoC;IAChCI,OAAO,CAACC,IAAR,CAAa,uEAAb;IACA;EACH;;EACDkB,gBAAgB,CAACF,UAAD,EAAaC,QAAb,CAAhB;AACH"},"metadata":{},"sourceType":"module"}