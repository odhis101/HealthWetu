{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote, requestFrame, getTimestamp, makeMutable } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, canApplyOptimalisation, getStyleWithoutAnimations, hasColorProps, isAnimated, parseColors, styleDiff, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, makeViewsRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\n\nfunction prepareAnimation(animatedProp, lastAnimation, lastValue) {\n  'worklet';\n\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      return prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    var animation = animatedProp;\n    var value = animation.current;\n\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n\n    animation.callStart(getTimestamp());\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}\n\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n  'worklet';\n\n  if (!animationsActive.value) {\n    return true;\n  }\n\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    var allFinished = true;\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    var finished = true;\n\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true);\n      }\n    }\n\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    var _allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n        _allFinished = false;\n      }\n    });\n    return _allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n  'worklet';\n\n  var _a, _b;\n\n  var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n  var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n\n  for (var key in newValues) {\n    var value = newValues[key];\n\n    if (isAnimated(value)) {\n      prepareAnimation(value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    var frame = function frame(timestamp) {\n      var animations = state.animations,\n          last = state.last,\n          isAnimationCancelled = state.isAnimationCancelled;\n\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      var updates = {};\n      var allFinished = true;\n\n      for (var propName in animations) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n\n      if (_frameTimestamp) {\n        frame(_frameTimestamp);\n      } else {\n        requestFrame(frame);\n      }\n    }\n\n    state.last = _extends({}, oldValues, newValues);\n    var style = getStyleWithoutAnimations(state.last);\n\n    if (style) {\n      updateProps(viewDescriptors, style, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    var diff = styleDiff(oldValues, newValues);\n    state.last = _extends({}, oldValues, newValues);\n\n    if (diff) {\n      updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n  }\n}\n\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n  'worklet';\n\n  var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n\n  var _a, _b;\n\n  var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n  var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n  Object.keys(animations).forEach(function (key) {\n    var value = newValues[key];\n\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    var value = newValues[key];\n\n    if (isAnimated(value)) {\n      prepareAnimation(value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp) {\n    var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    var updates = {};\n    var allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n    }\n\n    if (!allFinished) {\n      requestFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n\n      if (_frameTimestamp) {\n        frame(_frameTimestamp);\n      } else {\n        requestFrame(frame);\n      }\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  var diff = styleDiff(oldValues, newValues);\n  state.last = _extends({}, oldValues, newValues);\n\n  if (Object.keys(diff).length !== 0) {\n    updatePropsJestWrapper(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\n  }\n}\n\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(prop), _step; !(_step = _iterator()).done;) {\n      var element = _step.value;\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    for (var _i = 0, _Object$keys = Object.keys(prop); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop.value !== undefined) {\n    throw new Error(\"invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\n\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _a, _b;\n\n  var viewsRef = makeViewsRefSet();\n  var viewDescriptors = makeViewDescriptorsSet();\n  var initRef = useRef();\n  var inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var animationsActive = useSharedValue(true);\n  var animatedStyle = useRef({});\n\n  if (!dependencies) {\n    dependencies = [].concat(inputs, [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeRemote({\n        last: initialStyle\n      }),\n      sharableViewDescriptors: makeMutable([])\n    };\n    viewDescriptors.rebuildsharableViewDescriptors(initRef.current.sharableViewDescriptors);\n  }\n\n  dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\n  var _initRef$current = initRef.current,\n      initial = _initRef$current.initial,\n      remoteState = _initRef$current.remoteState,\n      sharableViewDescriptors = _initRef$current.sharableViewDescriptors;\n  var maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n  useEffect(function () {\n    var fun;\n    var _updaterFn3 = updater;\n    var optimalization = updater.__optimalization;\n\n    if (adapters) {\n      _updaterFn3 = function updaterFn() {\n        'worklet';\n\n        var newValues = updater();\n        adaptersArray.forEach(function (adapter) {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n\n    if (canApplyOptimalisation(_updaterFn3) && !shouldBeUseWeb()) {\n      if (hasColorProps(_updaterFn3())) {\n        _updaterFn3 = function updaterFn() {\n          'worklet';\n\n          var newValues = _updaterFn3();\n\n          var oldValues = remoteState.last;\n          var diff = styleDiff(oldValues, newValues);\n          remoteState.last = _extends({}, oldValues, newValues);\n          parseColors(diff);\n          return diff;\n        };\n      } else {\n        _updaterFn3 = function _updaterFn() {\n          'worklet';\n\n          var newValues = _updaterFn3();\n\n          var oldValues = remoteState.last;\n          var diff = styleDiff(oldValues, newValues);\n          remoteState.last = _extends({}, oldValues, newValues);\n          return diff;\n        };\n      }\n    } else if (!shouldBeUseWeb()) {\n      optimalization = 0;\n\n      _updaterFn3 = function _updaterFn2() {\n        'worklet';\n\n        var style = _updaterFn3();\n\n        parseColors(style);\n        return style;\n      };\n    }\n\n    if (typeof updater.__optimalization !== undefined) {\n      _updaterFn3.__optimalization = optimalization;\n    }\n\n    if (isJest()) {\n      fun = function fun() {\n        'worklet';\n\n        jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n      };\n    } else {\n      fun = function fun() {\n        'worklet';\n\n        styleUpdater(sharableViewDescriptors, _updaterFn3, remoteState, maybeViewRef, animationsActive);\n      };\n    }\n\n    var mapperId = startMapper(fun, inputs, [], _updaterFn3, sharableViewDescriptors);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n\n  if (process.env.JEST_WORKER_ID) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"names":["useEffect","useRef","startMapper","stopMapper","makeRemote","requestFrame","getTimestamp","makeMutable","updateProps","updatePropsJestWrapper","initialUpdaterRun","NativeReanimatedModule","useSharedValue","buildWorkletsHash","canApplyOptimalisation","getStyleWithoutAnimations","hasColorProps","isAnimated","parseColors","styleDiff","validateAnimatedStyles","makeViewDescriptorsSet","makeViewsRefSet","isJest","shouldBeUseWeb","prepareAnimation","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","_a","_b","animations","newValues","oldValues","last","hasAnimations","frame","isAnimationCancelled","isAnimationRunning","updates","propName","_frameTimestamp","style","diff","jestStyleUpdater","animatedStyle","adapters","length","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","viewsRef","initRef","inputs","values","_closure","adaptersArray","adaptersHash","__workletHash","push","initialStyle","initial","remoteState","sharableViewDescriptors","rebuildsharableViewDescriptors","native","fun","updaterFn","optimalization","__optimalization","adapter","mapperId","process","env","JEST_WORKER_ID"],"sources":["C:/Users/josho/Downloads/healthWetu/healthwetu/node_modules/react-native-reanimated/lib/reanimated2/hook/useAnimatedStyle.js"],"sourcesContent":["/* global _frameTimestamp */\r\nimport { useEffect, useRef } from 'react';\r\nimport { startMapper, stopMapper, makeRemote, requestFrame, getTimestamp, makeMutable, } from '../core';\r\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\r\nimport { initialUpdaterRun } from '../animation';\r\nimport NativeReanimatedModule from '../NativeReanimated';\r\nimport { useSharedValue } from './useSharedValue';\r\nimport { buildWorkletsHash, canApplyOptimalisation, getStyleWithoutAnimations, hasColorProps, isAnimated, parseColors, styleDiff, validateAnimatedStyles, } from './utils';\r\nimport { makeViewDescriptorsSet, makeViewsRefSet, } from '../ViewDescriptorsSet';\r\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\r\nfunction prepareAnimation(animatedProp, lastAnimation, lastValue) {\r\n    'worklet';\r\n    if (Array.isArray(animatedProp)) {\r\n        animatedProp.forEach((prop, index) => prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]));\r\n        // return animatedProp;\r\n    }\r\n    if (typeof animatedProp === 'object' && animatedProp.onFrame) {\r\n        const animation = animatedProp;\r\n        let value = animation.current;\r\n        if (lastValue !== undefined) {\r\n            if (typeof lastValue === 'object') {\r\n                if (lastValue.value !== undefined) {\r\n                    // previously it was a shared value\r\n                    value = lastValue.value;\r\n                }\r\n                else if (lastValue.onFrame !== undefined) {\r\n                    if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\r\n                        // it was an animation before, copy its state\r\n                        value = lastAnimation.current;\r\n                    }\r\n                    else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\r\n                        // it was initialized\r\n                        value = lastValue.current;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // previously it was a plain value, just set it as starting point\r\n                value = lastValue;\r\n            }\r\n        }\r\n        animation.callStart = (timestamp) => {\r\n            animation.onStart(animation, value, timestamp, lastAnimation);\r\n        };\r\n        animation.callStart(getTimestamp());\r\n        animation.callStart = null;\r\n    }\r\n    else if (typeof animatedProp === 'object') {\r\n        // it is an object\r\n        Object.keys(animatedProp).forEach((key) => prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]));\r\n    }\r\n}\r\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\r\n    'worklet';\r\n    if (!animationsActive.value) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(animation)) {\r\n        result[key] = [];\r\n        let allFinished = true;\r\n        animation.forEach((entry, index) => {\r\n            if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\r\n                allFinished = false;\r\n            }\r\n        });\r\n        return allFinished;\r\n    }\r\n    else if (typeof animation === 'object' && animation.onFrame) {\r\n        let finished = true;\r\n        if (!animation.finished) {\r\n            if (animation.callStart) {\r\n                animation.callStart(timestamp);\r\n                animation.callStart = null;\r\n            }\r\n            finished = animation.onFrame(animation, timestamp);\r\n            animation.timestamp = timestamp;\r\n            if (finished) {\r\n                animation.finished = true;\r\n                animation.callback && animation.callback(true /* finished */);\r\n            }\r\n        }\r\n        result[key] = animation.current;\r\n        return finished;\r\n    }\r\n    else if (typeof animation === 'object') {\r\n        result[key] = {};\r\n        let allFinished = true;\r\n        Object.keys(animation).forEach((k) => {\r\n            if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\r\n                allFinished = false;\r\n            }\r\n        });\r\n        return allFinished;\r\n    }\r\n    else {\r\n        result[key] = animation;\r\n        return true;\r\n    }\r\n}\r\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\r\n    'worklet';\r\n    var _a, _b;\r\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\r\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\r\n    const oldValues = state.last;\r\n    let hasAnimations = false;\r\n    for (const key in newValues) {\r\n        const value = newValues[key];\r\n        if (isAnimated(value)) {\r\n            prepareAnimation(value, animations[key], oldValues[key]);\r\n            animations[key] = value;\r\n            hasAnimations = true;\r\n        }\r\n        else {\r\n            delete animations[key];\r\n        }\r\n    }\r\n    if (hasAnimations) {\r\n        const frame = (timestamp) => {\r\n            const { animations, last, isAnimationCancelled } = state;\r\n            if (isAnimationCancelled) {\r\n                state.isAnimationRunning = false;\r\n                return;\r\n            }\r\n            const updates = {};\r\n            let allFinished = true;\r\n            for (const propName in animations) {\r\n                const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\r\n                if (finished) {\r\n                    last[propName] = updates[propName];\r\n                    delete animations[propName];\r\n                }\r\n                else {\r\n                    allFinished = false;\r\n                }\r\n            }\r\n            if (updates) {\r\n                updateProps(viewDescriptors, updates, maybeViewRef);\r\n            }\r\n            if (!allFinished) {\r\n                requestFrame(frame);\r\n            }\r\n            else {\r\n                state.isAnimationRunning = false;\r\n            }\r\n        };\r\n        state.animations = animations;\r\n        if (!state.isAnimationRunning) {\r\n            state.isAnimationCancelled = false;\r\n            state.isAnimationRunning = true;\r\n            if (_frameTimestamp) {\r\n                frame(_frameTimestamp);\r\n            }\r\n            else {\r\n                requestFrame(frame);\r\n            }\r\n        }\r\n        state.last = Object.assign({}, oldValues, newValues);\r\n        const style = getStyleWithoutAnimations(state.last);\r\n        if (style) {\r\n            updateProps(viewDescriptors, style, maybeViewRef);\r\n        }\r\n    }\r\n    else {\r\n        state.isAnimationCancelled = true;\r\n        state.animations = [];\r\n        const diff = styleDiff(oldValues, newValues);\r\n        state.last = Object.assign({}, oldValues, newValues);\r\n        if (diff) {\r\n            updateProps(viewDescriptors, newValues, maybeViewRef);\r\n        }\r\n    }\r\n}\r\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle, adapters = []) {\r\n    'worklet';\r\n    var _a, _b;\r\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\r\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\r\n    const oldValues = state.last;\r\n    // extract animated props\r\n    let hasAnimations = false;\r\n    Object.keys(animations).forEach((key) => {\r\n        const value = newValues[key];\r\n        if (!isAnimated(value)) {\r\n            delete animations[key];\r\n        }\r\n    });\r\n    Object.keys(newValues).forEach((key) => {\r\n        const value = newValues[key];\r\n        if (isAnimated(value)) {\r\n            prepareAnimation(value, animations[key], oldValues[key]);\r\n            animations[key] = value;\r\n            hasAnimations = true;\r\n        }\r\n    });\r\n    function frame(timestamp) {\r\n        const { animations, last, isAnimationCancelled } = state;\r\n        if (isAnimationCancelled) {\r\n            state.isAnimationRunning = false;\r\n            return;\r\n        }\r\n        const updates = {};\r\n        let allFinished = true;\r\n        Object.keys(animations).forEach((propName) => {\r\n            const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\r\n            if (finished) {\r\n                last[propName] = updates[propName];\r\n                delete animations[propName];\r\n            }\r\n            else {\r\n                allFinished = false;\r\n            }\r\n        });\r\n        if (Object.keys(updates).length) {\r\n            updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\r\n        }\r\n        if (!allFinished) {\r\n            requestFrame(frame);\r\n        }\r\n        else {\r\n            state.isAnimationRunning = false;\r\n        }\r\n    }\r\n    if (hasAnimations) {\r\n        state.animations = animations;\r\n        if (!state.isAnimationRunning) {\r\n            state.isAnimationCancelled = false;\r\n            state.isAnimationRunning = true;\r\n            if (_frameTimestamp) {\r\n                frame(_frameTimestamp);\r\n            }\r\n            else {\r\n                requestFrame(frame);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        state.isAnimationCancelled = true;\r\n        state.animations = [];\r\n    }\r\n    // calculate diff\r\n    const diff = styleDiff(oldValues, newValues);\r\n    state.last = Object.assign({}, oldValues, newValues);\r\n    if (Object.keys(diff).length !== 0) {\r\n        updatePropsJestWrapper(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\r\n    }\r\n}\r\n// check for invalid usage of shared values in returned object\r\nfunction checkSharedValueUsage(prop, currentKey) {\r\n    if (Array.isArray(prop)) {\r\n        // if it's an array (i.ex. transform) validate all its elements\r\n        for (const element of prop) {\r\n            checkSharedValueUsage(element, currentKey);\r\n        }\r\n    }\r\n    else if (typeof prop === 'object' && prop.value === undefined) {\r\n        // if it's a nested object, run validation for all its props\r\n        for (const key of Object.keys(prop)) {\r\n            checkSharedValueUsage(prop[key], key);\r\n        }\r\n    }\r\n    else if (currentKey !== undefined &&\r\n        typeof prop === 'object' &&\r\n        prop.value !== undefined) {\r\n        // if shared value is passed insted of its value, throw an error\r\n        throw new Error(`invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);\r\n    }\r\n}\r\nexport function useAnimatedStyle(updater, dependencies, adapters) {\r\n    var _a, _b;\r\n    const viewsRef = makeViewsRefSet();\r\n    const viewDescriptors = makeViewDescriptorsSet();\r\n    const initRef = useRef();\r\n    const inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\r\n    const adaptersArray = adapters\r\n        ? Array.isArray(adapters)\r\n            ? adapters\r\n            : [adapters]\r\n        : [];\r\n    const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\r\n    const animationsActive = useSharedValue(true);\r\n    const animatedStyle = useRef({});\r\n    // build dependencies\r\n    if (!dependencies) {\r\n        dependencies = [...inputs, updater.__workletHash];\r\n    }\r\n    else {\r\n        dependencies.push(updater.__workletHash);\r\n    }\r\n    adaptersHash && dependencies.push(adaptersHash);\r\n    if (!initRef.current) {\r\n        const initialStyle = initialUpdaterRun(updater);\r\n        validateAnimatedStyles(initialStyle);\r\n        initRef.current = {\r\n            initial: {\r\n                value: initialStyle,\r\n                updater: updater,\r\n            },\r\n            remoteState: makeRemote({ last: initialStyle }),\r\n            sharableViewDescriptors: makeMutable([]),\r\n        };\r\n        viewDescriptors.rebuildsharableViewDescriptors(\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        initRef.current.sharableViewDescriptors);\r\n    }\r\n    dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const { initial, remoteState, sharableViewDescriptors } = initRef.current;\r\n    const maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\r\n    useEffect(() => {\r\n        let fun;\r\n        let updaterFn = updater;\r\n        let optimalization = updater.__optimalization;\r\n        if (adapters) {\r\n            updaterFn = () => {\r\n                'worklet';\r\n                const newValues = updater();\r\n                adaptersArray.forEach((adapter) => {\r\n                    adapter(newValues);\r\n                });\r\n                return newValues;\r\n            };\r\n        }\r\n        if (canApplyOptimalisation(updaterFn) && !shouldBeUseWeb()) {\r\n            if (hasColorProps(updaterFn())) {\r\n                updaterFn = () => {\r\n                    'worklet';\r\n                    const newValues = updaterFn();\r\n                    const oldValues = remoteState.last;\r\n                    const diff = styleDiff(oldValues, newValues);\r\n                    remoteState.last = Object.assign({}, oldValues, newValues);\r\n                    parseColors(diff);\r\n                    return diff;\r\n                };\r\n            }\r\n            else {\r\n                updaterFn = () => {\r\n                    'worklet';\r\n                    const newValues = updaterFn();\r\n                    const oldValues = remoteState.last;\r\n                    const diff = styleDiff(oldValues, newValues);\r\n                    remoteState.last = Object.assign({}, oldValues, newValues);\r\n                    return diff;\r\n                };\r\n            }\r\n        }\r\n        else if (!shouldBeUseWeb()) {\r\n            optimalization = 0;\r\n            updaterFn = () => {\r\n                'worklet';\r\n                const style = updaterFn();\r\n                parseColors(style);\r\n                return style;\r\n            };\r\n        }\r\n        if (typeof updater.__optimalization !== undefined) {\r\n            updaterFn.__optimalization = optimalization;\r\n        }\r\n        if (isJest()) {\r\n            fun = () => {\r\n                'worklet';\r\n                jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\r\n            };\r\n        }\r\n        else {\r\n            fun = () => {\r\n                'worklet';\r\n                styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive);\r\n            };\r\n        }\r\n        const mapperId = startMapper(fun, inputs, [], updaterFn, \r\n        // TODO fix this\r\n        sharableViewDescriptors);\r\n        return () => {\r\n            stopMapper(mapperId);\r\n        };\r\n    }, dependencies);\r\n    useEffect(() => {\r\n        animationsActive.value = true;\r\n        return () => {\r\n            // initRef.current = null;\r\n            // viewsRef = null;\r\n            animationsActive.value = false;\r\n        };\r\n    }, []);\r\n    checkSharedValueUsage(initial.value);\r\n    if (process.env.JEST_WORKER_ID) {\r\n        return { viewDescriptors, initial: initial, viewsRef, animatedStyle };\r\n    }\r\n    else {\r\n        return { viewDescriptors, initial: initial, viewsRef };\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}